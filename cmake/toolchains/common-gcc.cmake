set(CMAKE_LINKER_TYPE BFD)

# Specify the cross compiler.
set(CMAKE_C_COMPILER   "${INKNIT_TOOLCHAIN_PREFIX}-gcc" CACHE FILEPATH "C compiler")
set(CMAKE_CXX_COMPILER "${INKNIT_TOOLCHAIN_PREFIX}-g++" CACHE FILEPATH "C++ compiler")
set(CMAKE_ASM_COMPILER "${INKNIT_TOOLCHAIN_PREFIX}-gcc" CACHE FILEPATH "ASM compiler")

set(CMAKE_C_COMPILER_ID   GNU)
set(CMAKE_CXX_COMPILER_ID GNU)
set(CMAKE_ASM_COMPILER_ID GNU)

set(CMAKE_OBJCOPY "${INKNIT_TOOLCHAIN_PREFIX}-objcopy" CACHE INTERNAL "")
set(CMAKE_OBJDUMP "${INKNIT_TOOLCHAIN_PREFIX}-objdump" CACHE INTERNAL "")
set(CMAKE_READELF "${INKNIT_TOOLCHAIN_PREFIX}-readelf" CACHE INTERNAL "")

foreach(LANG IN ITEMS C CXX ASM)
	set(CMAKE_${LANG}_FLAGS_INIT "${INKNIT_GCC_CPU_FLAGS} ${INKNIT_GCC_SECURITY_FLAGS}")
	set(CMAKE_${LANG}_FLAGS_DEBUG          "-O0 -g")
	set(CMAKE_${LANG}_FLAGS_RELEASE        "-Os -DNDEBUG")
	set(CMAKE_${LANG}_FLAGS_MINSIZEREL     "-Os")
	set(CMAKE_${LANG}_FLAGS_RELWITHDEBINFO "-Os -DNDEBUG")
	set(CMAKE_${LANG}_LINK_FLAGS "${INKNIT_GCC_LINK_FLAGS}")
	set(CMAKE_${LANG}_OUTPUT_EXTENSION .o)
endforeach()

# Look for includes and libraries only in the target system prefix.
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
