/*
 * inknit <https://github.com/mntone/inknit>
 *
 * Copyright (C) 2025 mntone <901816+mntone@users.noreply.github.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

// -- MARK: blit
#define _INKNIT_BLIT_PROTO                              \
	(struct inknit_image * INKNIT_RESTRICT      dst,    \
	 inknit_uint_t                              dx,     \
	 inknit_uint_t                              dy,     \
	 const struct inknit_image *INKNIT_RESTRICT src,    \
	 inknit_uint_t                              sx,     \
	 inknit_uint_t                              sy,     \
	 inknit_uint_t                              width,  \
	 inknit_uint_t                              height)

#ifdef INKNIT_ENABLE_BENCHMARKS
#define _inknit_blit_pixel_old32 INKNIT_CURRENT_INTERNAL_FUNC(blit_pixel_old)
void INKNIT_EXPORT _inknit_blit_pixel_old32 _INKNIT_BLIT_PROTO INKNIT_NONNULL(1, 4);

#define _inknit_blit_pixel32 INKNIT_CURRENT_INTERNAL_FUNC(blit_pixel)
void INKNIT_EXPORT _inknit_blit_pixel32 _INKNIT_BLIT_PROTO INKNIT_NONNULL(1, 4);

#define _inknit_blit_unaligned32 INKNIT_CURRENT_INTERNAL_FUNC(blit_unaligned)
void INKNIT_EXPORT _inknit_blit_unaligned32 _INKNIT_BLIT_PROTO INKNIT_NONNULL(1, 4);

#define _inknit_blit_mask32 INKNIT_CURRENT_INTERNAL_FUNC(blit_mask)
void INKNIT_EXPORT _inknit_blit_mask32 _INKNIT_BLIT_PROTO INKNIT_NONNULL(1, 4);

#define _inknit_blit_aligned32 INKNIT_CURRENT_INTERNAL_FUNC(blit_aligned)
void INKNIT_EXPORT _inknit_blit_aligned32 _INKNIT_BLIT_PROTO INKNIT_NONNULL(1, 4);
#endif

// -- MARK: draw_point
#define _inknit_draw_point_with_clip32 INKNIT_CURRENT_INTERNAL_FUNC(draw_point_with_clip)
void INKNIT_EXPORT _inknit_draw_point_with_clip32(
	uint32_t *INKNIT_RESTRICT                 data,
	uint32_t                                  stride,
	int32_t                                   x,
	int32_t                                   y,
	inknit_color_t                            color,
	const struct inknit_rect *INKNIT_RESTRICT clip_rect
) INKNIT_NONNULL(1, 6);

// -- MARK: draw_hline
#define _inknit_draw_hline32 INKNIT_CURRENT_INTERNAL_FUNC(draw_hline)
void INKNIT_EXPORT _inknit_draw_hline32(
	uint32_t *data, uint32_t stride, uint32_t x1, uint32_t x2, uint32_t y, inknit_color_t color
) INKNIT_NONNULL(1);

#define _inknit_draw_hline_with_clip32 INKNIT_CURRENT_INTERNAL_FUNC(draw_hline_with_clip)
void INKNIT_EXPORT _inknit_draw_hline_with_clip32(
	uint32_t *INKNIT_RESTRICT                 data,
	uint32_t                                  stride,
	int32_t                                   x1,
	int32_t                                   x2,
	int32_t                                   y,
	inknit_color_t                            color,
	const struct inknit_rect *INKNIT_RESTRICT clip_rect
) INKNIT_NONNULL(1, 7);

#if defined(INKNIT_ENABLE_BENCHMARKS)
#define _inknit_draw_hline_arith32 INKNIT_CURRENT_INTERNAL_FUNC(draw_hline_arith)
void INKNIT_EXPORT _inknit_draw_hline_arith32(
	uint32_t *data, uint32_t stride, uint32_t x1, uint32_t x2, uint32_t y, inknit_color_t color
) INKNIT_NONNULL(1);

#define _inknit_draw_hline_lut32 INKNIT_CURRENT_INTERNAL_FUNC(draw_hline_lut)
void INKNIT_EXPORT _inknit_draw_hline_lut32(
	uint32_t *data, uint32_t stride, uint32_t x1, uint32_t x2, uint32_t y, inknit_color_t color
) INKNIT_NONNULL(1);
#endif


// -- MARK: draw_vline
#define _inknit_draw_vline32 INKNIT_CURRENT_INTERNAL_FUNC(draw_vline)
void INKNIT_EXPORT _inknit_draw_vline32(
	uint32_t *data, uint32_t stride, uint32_t x, uint32_t y1, uint32_t y2, inknit_color_t color
) INKNIT_NONNULL(1);

#define _inknit_draw_vline_with_clip32 INKNIT_CURRENT_INTERNAL_FUNC(draw_vline_with_clip)
void INKNIT_EXPORT _inknit_draw_vline_with_clip32(
	uint32_t *INKNIT_RESTRICT                 data,
	uint32_t                                  stride,
	int32_t                                   x,
	int32_t                                   y1,
	int32_t                                   y2,
	inknit_color_t                            color,
	const struct inknit_rect *INKNIT_RESTRICT clip_rect
) INKNIT_NONNULL(1, 7);

#if defined(INKNIT_ENABLE_BENCHMARKS)
#define _inknit_draw_vline_scalar32 INKNIT_CURRENT_INTERNAL_FUNC(draw_vline_scalar)
void INKNIT_EXPORT _inknit_draw_vline_scalar32(
	uint32_t *data, uint32_t stride, uint32_t x, uint32_t y1, uint32_t y2, inknit_color_t color
) INKNIT_NONNULL(1);

#define _inknit_draw_vline_unroll32 INKNIT_CURRENT_INTERNAL_FUNC(draw_vline_unroll)
void INKNIT_EXPORT _inknit_draw_vline_unroll32(
	uint32_t *data, uint32_t stride, uint32_t x, uint32_t y1, uint32_t y2, inknit_color_t color
) INKNIT_NONNULL(1);
#endif


// -- MARK: draw_line
#define _inknit_draw_line32 INKNIT_CURRENT_INTERNAL_FUNC(draw_line)
void INKNIT_EXPORT _inknit_draw_line32(
	uint32_t      *data,
	uint32_t       stride,
	int32_t        x1,
	int32_t        y1,
	int32_t        x2,
	int32_t        y2,
	inknit_color_t color
) INKNIT_NONNULL(1);

#define _inknit_draw_line_with_clip32 INKNIT_CURRENT_INTERNAL_FUNC(draw_line_with_clip)
void INKNIT_EXPORT _inknit_draw_line_with_clip32(
	uint32_t *INKNIT_RESTRICT                 data,
	uint32_t                                  stride,
	int32_t                                   x1,
	int32_t                                   y1,
	int32_t                                   x2,
	int32_t                                   y2,
	inknit_color_t                            color,
	const struct inknit_rect *INKNIT_RESTRICT clip_rect
) INKNIT_NONNULL(1, 8);

#if defined(INKNIT_ENABLE_BENCHMARKS)
#define _inknit_draw_line_2loop32 INKNIT_CURRENT_INTERNAL_FUNC(draw_line_2loop)
void INKNIT_EXPORT _inknit_draw_line_2loop32(
	uint32_t      *data,
	uint32_t       stride,
	int32_t        x1,
	int32_t        y1,
	int32_t        x2,
	int32_t        y2,
	inknit_color_t color
) INKNIT_NONNULL(1);

#define _inknit_draw_line_1loop32 INKNIT_CURRENT_INTERNAL_FUNC(draw_line_1loop)
void INKNIT_EXPORT _inknit_draw_line_1loop32(
	uint32_t      *data,
	uint32_t       stride,
	int32_t        x1,
	int32_t        y1,
	int32_t        x2,
	int32_t        y2,
	inknit_color_t color
) INKNIT_NONNULL(1);
#endif


// -- MARK: draw_circle
#define _inknit_draw_circle_with_clip32 INKNIT_CURRENT_INTERNAL_FUNC(draw_circle_with_clip)
void INKNIT_EXPORT _inknit_draw_circle_with_clip32(
	uint32_t *INKNIT_RESTRICT                 data,
	uint32_t                                  stride,
	int32_t                                   cx,
	int32_t                                   cy,
	int32_t                                   radius,
	inknit_color_t                            color,
	const struct inknit_rect *INKNIT_RESTRICT clip_rect
) INKNIT_NONNULL(1, 7);


// -- MARK: draw_ellipse
#define _inknit_draw_ellipse_with_clip32 INKNIT_CURRENT_INTERNAL_FUNC(draw_ellipse_with_clip)
void INKNIT_EXPORT _inknit_draw_ellipse_with_clip32(
	uint32_t *INKNIT_RESTRICT                 data,
	uint32_t                                  stride,
	int32_t                                   cx,
	int32_t                                   cy,
	int32_t                                   rx,
	int32_t                                   ry,
	inknit_color_t                            color,
	const struct inknit_rect *INKNIT_RESTRICT clip_rect
) INKNIT_NONNULL(1, 8);


// -- MARK: fill_rect
#define _inknit_fill_rect_with_clip32 INKNIT_CURRENT_INTERNAL_FUNC(fill_rect_with_clip)
void INKNIT_EXPORT _inknit_fill_rect_with_clip32(
	uint32_t *INKNIT_RESTRICT                 data,
	uint32_t                                  stride,
	int32_t                                   x1,
	int32_t                                   y1,
	int32_t                                   x2,
	int32_t                                   y2,
	inknit_color_t                            color,
	const struct inknit_rect *INKNIT_RESTRICT clip_rect
) INKNIT_NONNULL(1, 8);


// -- MARK: clean up macros
#ifndef INKNIT_USE_MACRO_NAME
#undef _inknit_blit_pixel_old
#undef _inknit_blit_pixel
#undef _inknit_blit_unaligned
#undef _inknit_blit_mask
#undef _inknit_blit_aligned
#undef _inknit_draw_point_with_clip32
#undef _inknit_draw_hline32
#undef _inknit_draw_hline_with_clip32
#undef _inknit_draw_hline_arith32
#undef _inknit_draw_hline_lut32
#undef _inknit_draw_vline32
#undef _inknit_draw_vline_with_clip32
#undef _inknit_draw_vline_scalar32
#undef _inknit_draw_vline_unroll32
#undef _inknit_draw_line32
#undef _inknit_draw_line_with_clip32
#undef _inknit_draw_line_2loop32
#undef _inknit_draw_line_1loop32
#undef _inknit_draw_circle32
#undef _inknit_draw_ellipse32
#endif
