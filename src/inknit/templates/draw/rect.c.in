/*
 * inknit <https://github.com/mntone/inknit>
 *
 * Copyright (C) 2025 mntone <901816+mntone@users.noreply.github.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#ifdef __INTELLISENSE__
#include "../base.h.in"
#else
#include "../base.h"
#endif

void inknit_draw_rect(
	struct inknit_image *image,
	int32_t              x,
	int32_t              y,
	int32_t              width,
	int32_t              height,
	inknit_color_t       color
) {
	INKNIT_ASSUME_IMAGE(image);
	INKNIT_ASSUME_COORD_X(x);
	INKNIT_ASSUME_COORD_Y(y);
	INKNIT_ASSUME_SIZE(width, height);
	INKNIT_ASSUME_COLOR(color);

	uint32_t *INKNIT_RESTRICT const data   = (uint32_t *)image->data;
	const uint32_t                  stride = image->stride;

	struct inknit_rect clip_rect = {
		0,
		0,
		image->width - 1,
		(int16_t)(image->height - 1),
	};

	const int32_t right = x + width - 1;
	_inknit_draw_hline_with_clip32(data, stride, x, right, y, color, &clip_rect);

	if (height != 1) {
		const int32_t bottom = y + height - 1;
		_inknit_draw_hline_with_clip32(data, stride, x, right, bottom, color, &clip_rect);

		if (height > 2) {
			_inknit_draw_vline_with_clip32(data, stride, x, y + 1, bottom - 1, color, &clip_rect);
			_inknit_draw_vline_with_clip32(
				data, stride, right, y + 1, bottom - 1, color, &clip_rect
			);
		}
	}
}

void inknit_draw_rect_coord(
	struct inknit_image *image, int32_t x1, int32_t y1, int32_t x2, int32_t y2, inknit_color_t color
) {
	INKNIT_ASSUME_IMAGE(image);
	INKNIT_ASSUME_COORD_X_RANGE(x1, x2);
	INKNIT_ASSUME_COORD_Y_RANGE(y1, y2);
	INKNIT_ASSUME_COLOR(color);

	uint32_t *INKNIT_RESTRICT const data   = (uint32_t *)image->data;
	const uint32_t                  stride = image->stride;

	struct inknit_rect clip_rect = {
		0,
		0,
		image->width - 1,
		(int16_t)(image->height - 1),
	};

	_inknit_draw_hline_with_clip32(data, stride, x1, x2, y1, color, &clip_rect);

	if (y1 != y2) {
		_inknit_draw_hline_with_clip32(data, stride, x1, x2, y2, color, &clip_rect);

		const int32_t height = y2 - y1 + 1;
		if (height > 2) {
			_inknit_draw_vline_with_clip32(data, stride, x1, y1 + 1, y2 - 1, color, &clip_rect);
			_inknit_draw_vline_with_clip32(data, stride, x2, y1 + 1, y2 - 1, color, &clip_rect);
		}
	}
}
